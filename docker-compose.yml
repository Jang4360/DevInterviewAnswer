version: "3.8"

services:
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: backend
    expose:
      - "8080"
    env_file:
      - .env
    depends_on:
      - qdrant
      - db
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    expose:
      - "3000"
    env_file:
      - ./frontend/.env
    depends_on:
      - backend

  db:
    image: postgres:15 # 최신 PostgreSQL 이미지 사용
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: interviewdb
    volumes:
      - postgres_data:/var/lib/postgresql/data

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - frontend
      - backend
  reids:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"

volumes:
  postgres_data:
  qdrant_data:
