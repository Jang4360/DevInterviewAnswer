plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'jacoco'
}

group = 'dev.interview'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

jacoco {
	toolVersion = "0.8.11" // 최신 버전 사용
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	snippetsDir = file('build/generated-snippets')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.3'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.github.cdimascio:dotenv-java:2.2.4'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.postgresql:postgresql:42.6.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.data:spring-data-redis'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'io.lettuce.core:lettuce-core'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.h2database:h2'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:3.0.2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	useJUnitPlatform()
	outputs.dir snippetsDir
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test // 테스트 후 리포트 생성
	reports {
		xml.required = true
		html.required = true // HTML 리포트 생성
		csv.required = false
	}
}

asciidoctor {
	dependsOn test
	inputs.dir snippetsDir
	attributes 'snippets': snippetsDir
}